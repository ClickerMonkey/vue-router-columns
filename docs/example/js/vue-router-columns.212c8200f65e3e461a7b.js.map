{"version":3,"sources":["webpack:///js/vue-router-columns.212c8200f65e3e461a7b.js","webpack:///./src/components/RouterColumn.js","webpack:///./src/components/RouterColumnView.js","webpack:///./src/lib.js"],"names":["webpackJsonp","10","module","__webpack_exports__","__webpack_require__","getColumnIndex","instance","node","$parent","columnIndex","routerViewColumns","routerColumn","name","functional","inject","props","overflow","type","String","default","render","createElement","context","columnData","injections","data","children","parent","index","columns","width","widths","visible","visibles","columnVisibleIndex","start","staticClass","style","display","flexDirection","flexGrow","flexBasis","height","position","11","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","isNumber","x","isFinite","parseInt","minColumns","validate","maxColumns","columnWidth","depth","passive","Boolean","views","count","desired","empty","provide","this","watch","created","ignoreRouter","$router","afterEach","update","window","addEventListener","mounted","destroyed","removeEventListener","methods","getWidth","$el","offsetWidth","getColumnCount","max","Math","min","floor","getColumnRoutes","$route","matched","slice","updateColumns","$forceUpdate","routes","length","i","meta","columnsWide","routeVisible","updated","changed","_columnData$columns","push","$slots","5","Object","defineProperty","value","d","plugin","__WEBPACK_IMPORTED_MODULE_0__components_RouterColumn__","__WEBPACK_IMPORTED_MODULE_1__components_RouterColumnView__","install","Vue","options","component","use"],"mappings":"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","file":"js/vue-router-columns.212c8200f65e3e461a7b.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 10:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\nvar isNumber = function isNumber(x) {\n  return isFinite(parseInt(x));\n};\n\nfunction getColumnIndex(instance) {\n  var node = instance.$parent;\n  var columnIndex = 0;\n\n  while (node && !node.routerViewColumns) {\n    if (node.routerColumn) columnIndex++;\n    node = node.$parent;\n  }\n\n  return columnIndex;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\n  name: 'router-column',\n\n  functional: true,\n\n  inject: ['columnData'],\n\n  props: {\n    overflow: {\n      type: String,\n      default: 'scroll'\n    }\n  },\n\n  render: function render(createElement, context) {\n    var columnData = context.injections.columnData;\n\n    // Component is NOT being used in router-column-view\n    if (!columnData) {\n      return createElement('div', context.data, context.children);\n    }\n\n    var instance = context.parent;\n    var index = getColumnIndex(instance);\n    var columns = columnData.columns;\n    var width = columns.widths[index];\n    var visible = columns.visibles[index];\n\n    // ========= TAG COMPONENT =========\n    instance.routerColumn = true;\n    // ======= UPDATE COMPONENT ========\n    instance.columns = columns;\n    instance.columnIndex = index;\n    instance.columnVisibleIndex = index - columns.start;\n    // =================================\n\n    return createElement('div', {\n      staticClass: 'vue-router-column',\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexGrow: width,\n        flexBasis: 0,\n        height: '100%'\n      }\n    }, [!visible ? '' : createElement('div', {\n      staticClass: 'vue-router-column-view',\n      style: {\n        flexGrow: 1,\n        flexBasis: 0,\n        overflow: context.props.overflow,\n        position: 'relative'\n      }\n    }, context.children), createElement('router-view')]);\n  }\n});\n\n/***/ }),\n\n/***/ 11:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n\n\nvar isNumber = function isNumber(x) {\n  return isFinite(parseInt(x));\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\n  name: 'router-column-view',\n\n  props: {\n    minColumns: {\n      validate: isNumber,\n      default: 1\n    },\n\n    maxColumns: {\n      validate: isNumber,\n      default: 3\n    },\n\n    columnWidth: {\n      validate: isNumber,\n      default: 320\n    },\n\n    depth: {\n      validate: isNumber,\n      default: 0\n    },\n\n    passive: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data: function data() {\n    return {\n      columnData: {\n        columns: {\n          views: 0,\n          count: 0,\n          start: 0,\n          desired: 0,\n          visible: 0,\n          empty: 0,\n          widths: [],\n          visibles: []\n        }\n      }\n    };\n  },\n  provide: function provide() {\n    return {\n      columnData: this.columnData\n    };\n  },\n\n\n  watch: {\n    minColumns: 'update',\n    maxColumns: 'update',\n    columnWidth: 'update',\n    depth: 'update'\n  },\n\n  created: function created() {\n    this.ignoreRouter = this.$router.afterEach(this.update);\n\n    window.addEventListener('resize', this.update, { passive: this.passive });\n  },\n  mounted: function mounted() {\n    this.update();\n  },\n  destroyed: function destroyed() {\n    this.ignoreRouter();\n\n    window.removeEventListener('resize', this.update);\n  },\n\n\n  methods: {\n    getWidth: function getWidth() {\n      return this.$el.offsetWidth;\n    },\n    getColumnCount: function getColumnCount() {\n      var width = this.getWidth();\n      var max = parseInt(this.maxColumns);\n      var columnWidth = parseInt(this.columnWidth);\n\n      return Math.min(max, Math.max(1, Math.floor(width / columnWidth)));\n    },\n    getColumnRoutes: function getColumnRoutes() {\n      var depth = parseInt(this.depth);\n      var routes = depth ? this.$route.matched.slice(depth) : this.$route.matched;\n\n      return routes;\n    },\n    update: function update() {\n      if (this.updateColumns()) {\n        this.$forceUpdate();\n      }\n    },\n    updateColumns: function updateColumns() {\n      var routes = this.getColumnRoutes();\n      var min = parseInt(this.minColumns);\n      var columns = this.columnData.columns;\n      var views = routes.length;\n      var count = this.getColumnCount();\n\n      var desired = 0;\n      var visible = 0;\n      var visibles = [];\n      var widths = [];\n\n      for (var i = routes.length - 1; i >= 0; i--) {\n        var width = routes[i].meta.columnsWide || 1;\n        var routeVisible = desired < count;\n\n        desired += width;\n        widths[i] = routeVisible ? desired : 1;\n        visibles[i] = routeVisible;\n        visible += routeVisible ? 1 : 0;\n      }\n\n      var empty = Math.max(0, Math.min(min, count) - desired);\n      var start = views - visible;\n\n      var updated = {\n        views: views, count: count, desired: desired, start: start, empty: empty,\n        visible: visible, visibles: visibles, widths: widths\n      };\n\n      var changed = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(columns) !== __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(updated);\n\n      if (changed) {\n        this.columnData.columns = updated;\n      }\n\n      return changed;\n    }\n  },\n\n  render: function render(createElement) {\n    var _columnData$columns = this.columnData.columns,\n        empty = _columnData$columns.empty,\n        count = _columnData$columns.count;\n\n    var children = [];\n\n    if (count > 0) {\n      children.push(createElement('div', {\n        style: {\n          flexGrow: count - empty,\n          flexBasis: 0\n        }\n      }, [createElement('router-view')]));\n\n      if (empty) {\n        children.push(createElement('div', {\n          staticClass: 'vue-router-column-empty',\n          style: {\n            flexGrow: empty,\n            flexBasis: 0\n          }\n        }, [this.$slots.empty]));\n      }\n    }\n\n    // ========= TAG COMPONENT =========\n    this.routerViewColumns = true;\n    // =================================\n\n    return createElement('div', {\n      staticClass: 'vue-router-columns',\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      }\n    }, children);\n  }\n});\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"plugin\", function() { return plugin; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_RouterColumn__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_RouterColumnView__ = __webpack_require__(11);\n\n\n\n\nvar plugin = {\n  install: function install(Vue, options) {\n    Vue.component(__WEBPACK_IMPORTED_MODULE_0__components_RouterColumn__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__components_RouterColumn__[\"a\" /* default */]);\n    Vue.component(__WEBPACK_IMPORTED_MODULE_1__components_RouterColumnView__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__components_RouterColumnView__[\"a\" /* default */]);\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (plugin);\n\nif (window.Vue) {\n  window.Vue.use(plugin);\n}\n\n/***/ })\n\n},[5]);\n\n\n// WEBPACK FOOTER //\n// js/vue-router-columns.212c8200f65e3e461a7b.js","\nconst isNumber = x => isFinite(parseInt(x))\n\nfunction getColumnIndex(instance) {\n  let node = instance.$parent;\n  let columnIndex = 0;\n\n  while (node && !node.routerViewColumns)\n  {\n    if (node.routerColumn) columnIndex++;\n    node = node.$parent;\n  }\n\n  return columnIndex;\n}\n\nexport default {\n\n  name: 'router-column',\n\n  functional: true,\n\n  inject: ['columnData'],\n\n  props:\n  {\n    overflow:\n    {\n      type: String,\n      default: 'scroll'\n    }\n  },\n\n  render (createElement, context)\n  {\n    const columnData = context.injections.columnData;\n\n    // Component is NOT being used in router-column-view\n    if (!columnData)\n    {\n      return createElement('div', context.data, context.children);\n    }\n\n    const instance = context.parent;\n    const index = getColumnIndex(instance);\n    const columns = columnData.columns;\n    const width = columns.widths[index];\n    const visible = columns.visibles[index];\n\n    // ========= TAG COMPONENT =========\n    instance.routerColumn = true;\n    // ======= UPDATE COMPONENT ========\n    instance.columns = columns;\n    instance.columnIndex = index;\n    instance.columnVisibleIndex = index - columns.start;\n    // =================================\n\n    return createElement('div', {\n      staticClass: 'vue-router-column',\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexGrow: width,\n        flexBasis: 0,\n        height: '100%'\n      }\n    }, [\n      !visible ? '' :\n      createElement('div', {\n        staticClass: 'vue-router-column-view',\n        style: {\n          flexGrow: 1,\n          flexBasis: 0,\n          overflow: context.props.overflow,\n          position: 'relative'\n        }\n      }, context.children),\n      createElement('router-view')\n    ])\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/RouterColumn.js","\nconst isNumber = x => isFinite(parseInt(x))\n\nexport default {\n\n  name: 'router-column-view',\n\n  props:\n  {\n    minColumns:\n    {\n      validate: isNumber,\n      default: 1\n    },\n\n    maxColumns:\n    {\n      validate: isNumber,\n      default: 3\n    },\n\n    columnWidth:\n    {\n      validate: isNumber,\n      default: 320\n    },\n\n    depth:\n    {\n      validate: isNumber,\n      default: 0\n    },\n\n    passive:\n    {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data()\n  {\n    return {\n      columnData: {\n        columns: {\n          views: 0,\n          count: 0,\n          start: 0,\n          desired: 0,\n          visible: 0,\n          empty: 0,\n          widths: [],\n          visibles: []\n        }\n      }\n    };\n  },\n\n  provide()\n  {\n    return {\n      columnData: this.columnData\n    }\n  },\n\n  watch:\n  {\n    minColumns: 'update',\n    maxColumns: 'update',\n    columnWidth: 'update',\n    depth: 'update'\n  },\n\n  created()\n  {\n    this.ignoreRouter = this.$router.afterEach(this.update);\n\n    window.addEventListener('resize', this.update, { passive: this.passive });\n  },\n\n  mounted()\n  {\n    this.update()\n  },\n\n  destroyed()\n  {\n    this.ignoreRouter();\n\n    window.removeEventListener('resize', this.update);\n  },\n\n  methods:\n  {\n    getWidth ()\n    {\n      return this.$el.offsetWidth;\n    },\n\n    getColumnCount ()\n    {\n      const width = this.getWidth();\n      const max = parseInt(this.maxColumns);\n      const columnWidth = parseInt(this.columnWidth)\n\n      return Math.min(max, Math.max(1, Math.floor(width / columnWidth)));\n    },\n\n    getColumnRoutes ()\n    {\n      const depth = parseInt(this.depth);\n      const routes = depth\n        ? this.$route.matched.slice(depth)\n        : this.$route.matched;\n\n      return routes;\n    },\n\n    update ()\n    {\n      if (this.updateColumns())\n      {\n        this.$forceUpdate();\n      }\n    },\n\n    updateColumns ()\n    {\n      const routes = this.getColumnRoutes();\n      const min = parseInt(this.minColumns);\n      const columns = this.columnData.columns;\n      const views = routes.length;\n      const count = this.getColumnCount();\n\n      let desired = 0;\n      let visible = 0;\n      let visibles = [];\n      let widths = [];\n\n      for (let i = routes.length - 1; i >= 0; i--)\n      {\n        const width = routes[i].meta.columnsWide || 1;\n        const routeVisible = desired < count;\n\n        desired += width;\n        widths[ i ] = routeVisible ? desired : 1;\n        visibles[ i ] = routeVisible;\n        visible += routeVisible ? 1 : 0;\n      }\n\n      const empty = Math.max(0, Math.min(min, count) - desired);\n      const start = views - visible;\n\n      const updated = {\n        views, count, desired, start, empty,\n        visible, visibles, widths\n      };\n\n      const changed = JSON.stringify(columns) !== JSON.stringify(updated);\n\n      if (changed)\n      {\n        this.columnData.columns = updated;\n      }\n\n      return changed;\n    }\n  },\n\n  render (createElement)\n  {\n    const { empty, count } = this.columnData.columns;\n    const children = [];\n\n    if (count > 0)\n    {\n      children.push(\n        createElement('div', {\n          style: {\n            flexGrow: count - empty,\n            flexBasis: 0\n          }\n        }, [\n          createElement('router-view')\n        ])\n      );\n\n      if (empty) {\n        children.push(\n          createElement('div', {\n            staticClass: 'vue-router-column-empty',\n            style: {\n              flexGrow: empty,\n              flexBasis: 0\n            }\n          }, [\n            this.$slots.empty\n          ])\n        );\n      }\n    }\n\n    // ========= TAG COMPONENT =========\n    this.routerViewColumns = true\n    // =================================\n\n    return createElement('div', {\n      staticClass: 'vue-router-columns',\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      }\n    }, children)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/RouterColumnView.js","\nimport RouterColumn from './components/RouterColumn'\nimport RouterColumnView from './components/RouterColumnView'\n\nexport const plugin =\n{\n  install (Vue, options)\n  {\n    Vue.component(RouterColumn.name, RouterColumn);\n    Vue.component(RouterColumnView.name, RouterColumnView);\n  }\n}\n\nexport default plugin;\n\nif (window.Vue)\n{\n  window.Vue.use(plugin);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib.js"],"sourceRoot":""}